package GenericServiceEvents_pkg ;
import UxASNodeLibEvents.* ;
import iml.software.* ;
import iml.ports.* ;
import iml.connectivity.* ;
import iml.contracts.*;

type [Thread] GenericLastService {
	[Input] CmdRequest_in: EventDataPort<Bool>;
	[Output] CmdResponse_out: EventDataPort<Bool>;
  
	processing_path : FlowPath ;
	assert {processing_path.start = CmdRequest_in.flowpoint && processing_path.end = CmdResponse_out.flowpoint};
	

	gmonitor : responds_once ;
	c1 : Connector < Bool > := 
	<Bool>connect(CmdRequest_in.event,gmonitor.b);
	c2 : Connector < Bool > := 
	<Bool>connect(CmdResponse_out.event,gmonitor.a);
	
	d1 : delay ;
	c5 : Connector < FlowPath > := 
	<FlowPath>connect(processing_path,d1.f);
	c6 : Connector < Int > := 
	<Int>connect(1,d1.n);
	
	[Guarantee,Output] g : Bool := {gmonitor.holds  && d1.holds}  ;
	
}